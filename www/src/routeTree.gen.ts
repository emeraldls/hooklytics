/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'
import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ForgotPasswordRouteImport } from './routes/forgot-password'
import { Route as DeferredRouteImport } from './routes/deferred'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ConsoleLayoutRouteImport } from './routes/console/_layout'
import { Route as ConsoleLayoutIndexRouteImport } from './routes/console/_layout/index'
import { Route as ConsoleLayoutShadersRouteImport } from './routes/console/_layout/shaders'
import { Route as ConsoleLayoutSetupRouteImport } from './routes/console/_layout/setup'
import { ServerRoute as CustomScriptDotjsServerRouteImport } from './routes/customScript[.]js'
import { ServerRoute as ApiUsersServerRouteImport } from './routes/api/users'
import { ServerRoute as ApiUsersUserIdServerRouteImport } from './routes/api/users.$userId'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const ConsoleRouteImport = createFileRoute('/console')()
const rootServerRouteImport = createServerRootRoute()

const ConsoleRoute = ConsoleRouteImport.update({
  id: '/console',
  path: '/console',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordRoute = ForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const DeferredRoute = DeferredRouteImport.update({
  id: '/deferred',
  path: '/deferred',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ConsoleLayoutRoute = ConsoleLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => ConsoleRoute,
} as any)
const ConsoleLayoutIndexRoute = ConsoleLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ConsoleLayoutRoute,
} as any)
const ConsoleLayoutShadersRoute = ConsoleLayoutShadersRouteImport.update({
  id: '/shaders',
  path: '/shaders',
  getParentRoute: () => ConsoleLayoutRoute,
} as any)
const ConsoleLayoutSetupRoute = ConsoleLayoutSetupRouteImport.update({
  id: '/setup',
  path: '/setup',
  getParentRoute: () => ConsoleLayoutRoute,
} as any)
const CustomScriptDotjsServerRoute = CustomScriptDotjsServerRouteImport.update({
  id: '/customScript.js',
  path: '/customScript.js',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUsersServerRoute = ApiUsersServerRouteImport.update({
  id: '/api/users',
  path: '/api/users',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUsersUserIdServerRoute = ApiUsersUserIdServerRouteImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => ApiUsersServerRoute,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/deferred': typeof DeferredRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/console': typeof ConsoleLayoutRouteWithChildren
  '/console/setup': typeof ConsoleLayoutSetupRoute
  '/console/shaders': typeof ConsoleLayoutShadersRoute
  '/console/': typeof ConsoleLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/deferred': typeof DeferredRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/console': typeof ConsoleLayoutIndexRoute
  '/console/setup': typeof ConsoleLayoutSetupRoute
  '/console/shaders': typeof ConsoleLayoutShadersRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/deferred': typeof DeferredRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/console': typeof ConsoleRouteWithChildren
  '/console/_layout': typeof ConsoleLayoutRouteWithChildren
  '/console/_layout/setup': typeof ConsoleLayoutSetupRoute
  '/console/_layout/shaders': typeof ConsoleLayoutShadersRoute
  '/console/_layout/': typeof ConsoleLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/deferred'
    | '/forgot-password'
    | '/login'
    | '/signup'
    | '/console'
    | '/console/setup'
    | '/console/shaders'
    | '/console/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/deferred'
    | '/forgot-password'
    | '/login'
    | '/signup'
    | '/console'
    | '/console/setup'
    | '/console/shaders'
  id:
    | '__root__'
    | '/'
    | '/deferred'
    | '/forgot-password'
    | '/login'
    | '/signup'
    | '/console'
    | '/console/_layout'
    | '/console/_layout/setup'
    | '/console/_layout/shaders'
    | '/console/_layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DeferredRoute: typeof DeferredRoute
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  ConsoleRoute: typeof ConsoleRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/customScript.js': typeof CustomScriptDotjsServerRoute
  '/api/users': typeof ApiUsersServerRouteWithChildren
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
}
export interface FileServerRoutesByTo {
  '/customScript.js': typeof CustomScriptDotjsServerRoute
  '/api/users': typeof ApiUsersServerRouteWithChildren
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/customScript.js': typeof CustomScriptDotjsServerRoute
  '/api/users': typeof ApiUsersServerRouteWithChildren
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/customScript.js'
    | '/api/users'
    | '/api/auth/$'
    | '/api/users/$userId'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/customScript.js' | '/api/users' | '/api/auth/$' | '/api/users/$userId'
  id:
    | '__root__'
    | '/customScript.js'
    | '/api/users'
    | '/api/auth/$'
    | '/api/users/$userId'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  CustomScriptDotjsServerRoute: typeof CustomScriptDotjsServerRoute
  ApiUsersServerRoute: typeof ApiUsersServerRouteWithChildren
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/console': {
      id: '/console'
      path: '/console'
      fullPath: '/console'
      preLoaderRoute: typeof ConsoleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/deferred': {
      id: '/deferred'
      path: '/deferred'
      fullPath: '/deferred'
      preLoaderRoute: typeof DeferredRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/console/_layout': {
      id: '/console/_layout'
      path: '/console'
      fullPath: '/console'
      preLoaderRoute: typeof ConsoleLayoutRouteImport
      parentRoute: typeof ConsoleRoute
    }
    '/console/_layout/': {
      id: '/console/_layout/'
      path: '/'
      fullPath: '/console/'
      preLoaderRoute: typeof ConsoleLayoutIndexRouteImport
      parentRoute: typeof ConsoleLayoutRoute
    }
    '/console/_layout/shaders': {
      id: '/console/_layout/shaders'
      path: '/shaders'
      fullPath: '/console/shaders'
      preLoaderRoute: typeof ConsoleLayoutShadersRouteImport
      parentRoute: typeof ConsoleLayoutRoute
    }
    '/console/_layout/setup': {
      id: '/console/_layout/setup'
      path: '/setup'
      fullPath: '/console/setup'
      preLoaderRoute: typeof ConsoleLayoutSetupRouteImport
      parentRoute: typeof ConsoleLayoutRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/customScript.js': {
      id: '/customScript.js'
      path: '/customScript.js'
      fullPath: '/customScript.js'
      preLoaderRoute: typeof CustomScriptDotjsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users': {
      id: '/api/users'
      path: '/api/users'
      fullPath: '/api/users'
      preLoaderRoute: typeof ApiUsersServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users/$userId': {
      id: '/api/users/$userId'
      path: '/$userId'
      fullPath: '/api/users/$userId'
      preLoaderRoute: typeof ApiUsersUserIdServerRouteImport
      parentRoute: typeof ApiUsersServerRoute
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface ConsoleLayoutRouteChildren {
  ConsoleLayoutSetupRoute: typeof ConsoleLayoutSetupRoute
  ConsoleLayoutShadersRoute: typeof ConsoleLayoutShadersRoute
  ConsoleLayoutIndexRoute: typeof ConsoleLayoutIndexRoute
}

const ConsoleLayoutRouteChildren: ConsoleLayoutRouteChildren = {
  ConsoleLayoutSetupRoute: ConsoleLayoutSetupRoute,
  ConsoleLayoutShadersRoute: ConsoleLayoutShadersRoute,
  ConsoleLayoutIndexRoute: ConsoleLayoutIndexRoute,
}

const ConsoleLayoutRouteWithChildren = ConsoleLayoutRoute._addFileChildren(
  ConsoleLayoutRouteChildren,
)

interface ConsoleRouteChildren {
  ConsoleLayoutRoute: typeof ConsoleLayoutRouteWithChildren
}

const ConsoleRouteChildren: ConsoleRouteChildren = {
  ConsoleLayoutRoute: ConsoleLayoutRouteWithChildren,
}

const ConsoleRouteWithChildren =
  ConsoleRoute._addFileChildren(ConsoleRouteChildren)

interface ApiUsersServerRouteChildren {
  ApiUsersUserIdServerRoute: typeof ApiUsersUserIdServerRoute
}

const ApiUsersServerRouteChildren: ApiUsersServerRouteChildren = {
  ApiUsersUserIdServerRoute: ApiUsersUserIdServerRoute,
}

const ApiUsersServerRouteWithChildren = ApiUsersServerRoute._addFileChildren(
  ApiUsersServerRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DeferredRoute: DeferredRoute,
  ForgotPasswordRoute: ForgotPasswordRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  ConsoleRoute: ConsoleRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  CustomScriptDotjsServerRoute: CustomScriptDotjsServerRoute,
  ApiUsersServerRoute: ApiUsersServerRouteWithChildren,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
